name: Continuous Integration
on: 
  push:
    paths-ignore:
      - 'README.md'
  pull_request:
    paths-ignore:
      - 'README.md'
jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - run: docker build --target test --tag todo_app:test -f dockerfiles/Dockerfile.todo_app .
    - run: docker run todo_app:test
    - run: docker run --entrypoint poetry todo_app:test run safety check
      continue-on-error: true 

  deploy: 
    name: Docker Hub Push & Triggers App Service Deploy
    runs-on: ubuntu-latest
    needs: build 
    # if: ${{github.event_name=='push' && github.ref=='refs/heads/main'}}
    steps:
       - uses: actions/checkout@v2
       - name: Login to Docker Hub
         uses: docker/login-action@v3
         with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
       - run: docker build --target prod --tag fwande/todo_app:prod -f dockerfiles/Dockerfile.todo_app .
       - run: docker push fwande/todo_app:prod

    
       - name: Initialise Terraform
         env: 
            TF_VAR_COSMOSDB_ACCOUNT: ${{ secrets.TF_VAR_COSMOSDB_ACCOUNT }}
            TF_VAR_DOCKER_IMAGE_NAME: ${{ secrets.TF_VAR_DOCKER_IMAGE_NAME }}
            TF_VAR_FLASK_APP: ${{ secrets.TF_VAR_FLASK_APP }}
            TF_VAR_FLASK_DEBUG: ${{ secrets.TF_VAR_FLASK_DEBUG }}
            TF_VAR_MONGODB_COLLECTION_NAME: ${{ secrets.TF_VAR_MONGODB_COLLECTION_NAME }}
            TF_VAR_MONGODB_NAME: ${{ secrets.TF_VAR_MONGODB_NAME }}
            TF_VAR_RESOURCE_GROUP_NAME: ${{ secrets.TF_VAR_RESOURCE_GROUP_NAME }}
            TF_VAR_SECRET_KEY: ${{ secrets.TF_VAR_SECRET_KEY }}
            TF_VAR_SUBSCRIPTION_ID: ${{ secrets.TF_VAR_SUBSCRIPTION_ID }}
            TF_VAR_WEBSITES_PORT: ${{ secrets.TF_VAR_WEBSITES_PORT }}
         run: terraform init | terraform apply -auto-approve | curl -dH -X POST "$(terraform output -raw cd_webhook)"
         
     
    


 


     
